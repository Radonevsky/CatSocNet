{"version":3,"sources":["assets/images/lookingForAJob.jpg","assets/images/wallpaper dream.png","Components/Profile/ProfileInfo/ProfileInfoForm.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","utils/ToFirstUpperCase.js","Components/Profile/ProfileInfo/ProfileInfoForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/Profile.module.css"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","toFirstUpperCase","label","toUpperCase","substring","ProfileInfoForm","useForm","register","handleSubmit","errors","setError","clearErrors","onSubmit","data","a","console","log","formData","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","changeProfileInfo","serverError","message","errorMessages","formEditMode","form","onClick","serverErrors","name","ref","map","formDiv","defaultValue","textarea","for","type","required","minLength","Object","keys","profile","key","contactsItem","ProfileData","infoBlock","contactTitle","contactValue","jobImg","src","ProfilePhoto","togglePhotoEditMode","largeUserPhoto","photos","large","userPhoto","isOwner","changeButton","target","files","length","saveNewAva","Contacts","ProfileInfo","editProfileMode","toggleFormEditMode","img","wallpaper","alt","profileWrapper","userId","Preloader","Post","item","count_like","MyPostsForm","onAddPost","render","component","placeholder","button","MyPosts","postsElements","posts","p","likesCount","postsBlock","send","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","content","authoraizedUserId","ProfileContainer","this","match","params","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","isAuth","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.05a40bfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lookingForAJob.ed1a66cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wallpaper dream.a432d178.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileInfoForm_form__RoPwx\",\"contacts\":\"ProfileInfoForm_contacts__1BW7p\",\"contactsItem\":\"ProfileInfoForm_contactsItem__2Tnz7\",\"fullName\":\"ProfileInfoForm_fullName__-P4ox\",\"textarea\":\"ProfileInfoForm_textarea__ghPiW\",\"formDiv\":\"ProfileInfoForm_formDiv__2k9fw\",\"errors\":\"ProfileInfoForm_errors__1JQXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__3b9Jb\",\"content\":\"MyPosts_content__2Edkl\",\"postsBlock\":\"MyPosts_postsBlock__1uluO\",\"send\":\"MyPosts_send__rBCeC\",\"button\":\"MyPosts_button__3BS66\",\"textarea\":\"MyPosts_textarea__3_rCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3QpFf\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\n\r\nconst toFirstUpperCase = (label) => {\r\n    const string = label[0].toUpperCase() + label.substring(1);\r\n    return string;\r\n}\r\n\r\nexport default toFirstUpperCase;","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport s from './ProfileInfoForm.module.css'\r\nimport toFirstUpperCase from \"../../../utils/ToFirstUpperCase\";\r\n\r\nconst ProfileInfoForm = (props) => {\r\n    const {register, handleSubmit, errors, setError, clearErrors} = useForm();\r\n\r\n    const onSubmit = async data => {\r\n        console.log('submit pressed')\r\n        const formData = {\r\n            aboutMe: data.aboutMe,\r\n            contacts: {\r\n                facebook: data.facebook,\r\n                website: data.website,\r\n                vk: data.vk,\r\n                twitter: data.twitter,\r\n                instagram: data.instagram,\r\n                youtube: data.youtube,\r\n                github: data.github,\r\n                mainLink: data.mainLink\r\n            },\r\n            lookingForAJob: data.lookingForAJob,\r\n            lookingForAJobDescription: data.lookingForAJobDescription,\r\n            fullName: data.fullName\r\n        }\r\n        //console.log(formData);\r\n        const serverError = await props.changeProfileInfo(formData);\r\n        serverError ? setError(\"serverErrors\", {\r\n                message: serverError.errorMessages\r\n            })\r\n            : props.formEditMode();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\r\n            <button onClick={()=>clearErrors(\"serverErrors\")}>\r\n                Save\r\n            </button>\r\n            {errors.serverErrors && <div name='serverErrors' ref={register}\r\n                                         className={s.errors}>{errors.serverErrors.message.map(e=><div>{e}</div>)}</div>}\r\n\r\n            <div className={s.formDiv}>\r\n                <label>About me:</label><br/>\r\n                <textarea name='aboutMe' defaultValue={props.aboutMe}\r\n                          ref={register} className={s.textarea}\r\n                />\r\n            </div>\r\n            <div className={s.formDiv}>\r\n                <label for=\"lookingForAJob\">Looking for a job</label>\r\n                <input type=\"checkbox\" name=\"lookingForAJob\" ref={register}/>\r\n            </div>\r\n            <div className={s.formDiv}>\r\n                <label>Job description:</label><br/>\r\n                <textarea name='lookingForAJobDescription' defaultValue={props.lookingForAJobDescription}\r\n                          ref={register} className={s.textarea}\r\n                />\r\n            </div>\r\n            <div className={s.fullName}>\r\n                <label for='fullName'>Your name</label>\r\n                <input name='fullName' defaultValue={props.fullName}\r\n                       ref={register({required: true, minLength: 4})}\r\n                />\r\n                {errors.fullName?.type === \"required\" && <span className={s.errors}>This field is required!</span>}\r\n                {errors.fullName?.type === \"minLength\" && <span className={s.errors}>Min 4 characters!</span>}\r\n                <div>\r\n\r\n                    <span className={s.contacts}>Contacts:</span>\r\n                    {Object.keys(props.profile.contacts).map(key => {\r\n                        return (\r\n                            <>\r\n                                <div className={s.contactsItem}>\r\n                                    <label for={key}>{toFirstUpperCase(key)}</label>\r\n                                    <input name={key} defaultValue={props.profile.contacts[key]}\r\n                                           ref={register}/>\r\n                                </div>\r\n                            </>\r\n                        )\r\n\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default ProfileInfoForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader\";\r\nimport lookingForAJob from '../../../assets/images/lookingForAJob.jpg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user1.png\";\r\nimport wallpaper from \"../../../assets/images/wallpaper dream.png\";\r\nimport ProfileInfoForm from \"./ProfileInfoForm\";\r\nimport toFirstUpperCase from \"../../../utils/ToFirstUpperCase\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editProfileMode, toggleFormEditMode] = useState(false);\r\n    const formEditMode = () => {\r\n        toggleFormEditMode(!editProfileMode)\r\n    }\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <div>\r\n\r\n        <div className={s.img}>\r\n            <img\r\n                src={wallpaper}\r\n                alt=\"logo\"/>\r\n        </div>\r\n\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n        <div className={s.fullName}>{props.profile.fullName}</div>\r\n        <button onClick={formEditMode} className={s.changeButton}>Change profile info</button>\r\n        <div className={s.profileWrapper}>\r\n            {editProfileMode ? <ProfileInfoForm profile={props.profile} userId={props.userId}\r\n                                                changeProfileInfo={props.changeProfileInfo}\r\n                                                formEditMode={formEditMode}\r\n                                                lookingForAJobDescription={props.profile.lookingForAJobDescription}\r\n                                                fullName={props.profile.fullName}\r\n                                                    aboutMe={props.profile.aboutMe}\r\n                                                />\r\n                : <ProfileData profile={props.profile}/>}\r\n            <ProfilePhoto profile={props.profile} isOwner={props.isOwner}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n\r\n    return (\r\n        <div className={s.infoBlock}>\r\n            <b>About me:</b>\r\n            <div>{props.profile.aboutMe}</div>\r\n            <div>\r\n                <b>My contacts:</b>\r\n            </div>\r\n            <div>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contacts contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                Job:\r\n                {(props.profile.lookingForAJob) ?\r\n                    <div className={s.jobImg}>\r\n                        <img src={lookingForAJob}/> <br/>\r\n                    </div> : ' I have a job'}\r\n                <div>Job description: {props.profile.lookingForAJobDescription}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfilePhoto = props => {\r\n    let [editMode, togglePhotoEditMode] = useState(false);\r\n    const photoEditMode = () => {\r\n        togglePhotoEditMode(!editMode)\r\n    }\r\n    const onSelectAva = (e) => {\r\n        if (e.target.files.length) {\r\n            props.saveNewAva(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.largeUserPhoto}>\r\n            <img src={props.profile.photos.large\r\n                ? props.profile.photos.large\r\n                : userPhoto} className={s.largeUserPhoto}/>\r\n            {props.isOwner && <button className={s.changeButton} onClick={photoEditMode}>Change photo</button>}\r\n            {editMode && <input type=\"file\" onChange={onSelectAva} className=\"custom-file-input\"/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div>{toFirstUpperCase(contactTitle)}: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://icatcare.org/app/uploads/2018/07/Thinking-of-getting-a-cat.png\" alt=\"a\"/>\r\n           <div>\r\n            {props.message}\r\n           </div>\r\n            <div>\r\n            <button>Like</button>\r\n                ({props.count_like})\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, Form} from \"react-final-form\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map(p => <Post message={p.message} count_like={p.likesCount}/>);\r\n    let onAddPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    }\r\n    return <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <div className={s.send}>\r\n            <MyPostsForm onAddPost={onAddPost}/>\r\n        </div>\r\n        <div className={s.item}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst MyPostsForm = (props) => (\r\n    <Form\r\n        onSubmit={props.onAddPost}\r\n        render={({handleSubmit}) => (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field component={\"textarea\"} placeholder={\"Enter your post\"} name={\"newPostText\"} className={s.textarea}/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className={s.button}>Add post</button>\r\n                </div>\r\n            </form>\r\n        )}\r\n    />\r\n)\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\nreturn {\r\n    addPost: (newPostText) => {\r\n        dispatch(addPostActionCreator(newPostText))\r\n    },\r\n}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div className={s.content}>\r\n        <ProfileInfo profile={props.profile} status={props.status}\r\n                     updateStatus={props.updateStatus} isOwner={props.isOwner}\r\n                     saveNewAva={props.saveNewAva} changeProfileInfo={props.changeProfileInfo}\r\n                     userId={props.authoraizedUserId}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n}\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeProfileInfo, getStatus, getUserProfile, saveNewAva, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authoraizedUserId;\r\n            if (!this.props.authoraizedUserId) {\r\n                this.props.history.push('login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus} isOwner={!this.props.match.params.userId}\r\n                     changeProfileInfo={this.props.changeProfileInfo} userId={this.props.authoraizedUserId}/>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth.isAuth,\r\n        authoraizedUserId: state.auth.userId\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile, getStatus, updateStatus, saveNewAva,\r\n        changeProfileInfo\r\n    }),\r\n    withRouter, withAuthRedirect)(ProfileContainer)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"ProfileInfo_profileWrapper__2RJuQ\",\"infoBlock\":\"ProfileInfo_infoBlock__2XzO6\",\"fullName\":\"ProfileInfo_fullName__1Om3P\",\"img\":\"ProfileInfo_img__36Drt\",\"jobImg\":\"ProfileInfo_jobImg__3yyMS\",\"largeUserPhoto\":\"ProfileInfo_largeUserPhoto__3ZMM7\",\"status\":\"ProfileInfo_status__3Bpqo\",\"changeButton\":\"ProfileInfo_changeButton__-pNed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__4Ixjr\",\"item\":\"Profile_item__3m5It\"};"],"sourceRoot":""}